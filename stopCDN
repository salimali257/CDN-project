#! /bin/bash


dns_server='cs5700cdnproject.ccs.neu.edu'

#list of amazon server
replica_servers=("ec2-54-85-32-37.compute-1.amazonaws.com" "ec2-54-193-70-31.us-west-1.compute.amazonaws.com" "ec2-52-38-67-246.us-west-2.compute.amazonaws.com" 
"ec2-52-51-20-200.eu-west-1.compute.amazonaws.com" "ec2-52-29-65-165.eu-central-1.compute.amazonaws.com" "ec2-52-196-70-227.ap-northeast-1.compute.amazonaws.com" 
"ec2-54-169-117-213.ap-southeast-1.compute.amazonaws.com" "ec2-52-63-206-143.ap-southeast-2.compute.amazonaws.com" "ec2-54-233-185-94.sa-east-1.compute.amazonaws.com")


# arguement handling on command line
while getopts "p:o:n:u:i:" arguments
do
	case $arguments in
		p) port=$OPTARG;;

		o) origin=$OPTARG;;

		n) name=$OPTARG;;

		u) username=$OPTARG;;

		i) keyfile=$OPTARG;;

		?) echo "Invalid arguement"
		exit 1;;
		esac
done

# Stop the dnsserver
ssh -i $keyfile $username@$dns_server 'killall -u'$username' python'					


# stop the httpserver on each amazon server
for each_replica in "${replica_servers[@]}"; do
	ssh -i $keyfile $username@$each_replica 'killall -u'$username' python'
done

